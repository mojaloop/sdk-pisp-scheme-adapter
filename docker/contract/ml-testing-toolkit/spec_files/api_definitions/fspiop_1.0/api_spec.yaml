openapi: 3.0.2
info:
  version: '1.0'
  title: Open API for FSP Interoperability (FSPIOP)
  description: Based on API Definition.docx updated on 2018-03-13 Version 1.0. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.
  license:
    name: Open API for FSP Interoperability (FSPIOP)
    url: TBD
servers:
  - url: /
paths:
  '/parties/{Type}/{ID}':
    parameters:
      - name: Type
        in: path
        required: true
        schema:
          type: string
        description: 'The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/0'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/1'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/2'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/3'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/4'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/5'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/6'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/7'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/8'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/9'
    get:
      description: |
        The HTTP request GET /parties// (or GET /parties///) is used to lookup
        information regarding the requested Party, defined by ,  and optionally
        (for example, GET /parties/MSISDN/123456789, or GET
        /parties/BUSINESS/shoecompany/employee1).
      summary: GetPartiesByTypeAndId
      tags:
        - parties
      operationId: GetPartiesByTypeAndId
      responses:
        '202':
          $ref: '#/paths/~1authorizations/post/responses/202'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
    put:
      operationId: PartiesByTypeAndId
      summary: Return party information
      description: |
        The callback `PUT /parties/{Type}/{ID}` is used to inform the
        PISP of a successful result of the Party information lookup.

        Switch(Account Lookup Service) -> PISP.
      tags:
        - parties
      parameters:
        - $ref: '#/paths/~1authorizations/post/parameters/1'
      requestBody:
        description: Party information returned.
        required: true
        content:
          application/json:
            schema:
              title: PartiesTypeIDPutResponse
              type: object
              description: |
                The object sent in the PUT /parties/{Type}/{ID} callback.

                This is a variant based on FSPIOP `PartiesTypeIDPutResponse` specification.
                Main difference being that it returns a `Party` with the newly added
                `accounts` property.
              properties:
                party:
                  title: Party
                  type: object
                  description: |
                    Data model for the complex type Party.

                    This is a variant based on FSPIOP `Party` specification.
                    Main difference being the newly added `accounts` property.
                  properties:
                    partyIdInfo:
                      title: PartyIdInfo
                      type: object
                      description: Data model for the complex type PartyIdInfo.
                      properties:
                        partyIdType:
                          title: PartyIdType
                          type: string
                          enum:
                            - MSISDN
                            - EMAIL
                            - PERSONAL_ID
                            - BUSINESS
                            - DEVICE
                            - ACCOUNT_ID
                            - IBAN
                            - ALIAS
                          description: |
                            Below are the allowed values for the enumeration.
                            - MSISDN - An MSISDN (Mobile Station International Subscriber Directory
                            Number, that is, the phone number) is used as reference to a participant.
                            The MSISDN identifier should be in international format according to the
                            [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).
                            Optionally, the MSISDN may be prefixed by a single plus sign, indicating the
                            international prefix.
                            - EMAIL - An email is used as reference to a
                            participant. The format of the email should be according to the informational
                            [RFC 3696](https://tools.ietf.org/html/rfc3696).
                            - PERSONAL_ID - A personal identifier is used as reference to a participant.
                            Examples of personal identification are passport number, birth certificate
                            number, and national registration number. The identifier number is added in
                            the PartyIdentifier element. The personal identifier type is added in the
                            PartySubIdOrType element.
                            - BUSINESS - A specific Business (for example, an organization or a company)
                            is used as reference to a participant. The BUSINESS identifier can be in any
                            format. To make a transaction connected to a specific username or bill number
                            in a Business, the PartySubIdOrType element should be used.
                            - DEVICE - A specific device (for example, a POS or ATM) ID connected to a
                            specific business or organization is used as reference to a Party.
                            For referencing a specific device under a specific business or organization,
                            use the PartySubIdOrType element.
                            - ACCOUNT_ID - A bank account number or FSP account ID should be used as
                            reference to a participant. The ACCOUNT_ID identifier can be in any format,
                            as formats can greatly differ depending on country and FSP.
                            - IBAN - A bank account number or FSP account ID is used as reference to a
                            participant. The IBAN identifier can consist of up to 34 alphanumeric
                            characters and should be entered without whitespace.
                            - ALIAS An alias is used as reference to a participant. The alias should be
                            created in the FSP as an alternative reference to an account owner.
                            Another example of an alias is a username in the FSP system.
                            The ALIAS identifier can be in any format. It is also possible to use the
                            PartySubIdOrType element for identifying an account under an Alias defined
                            by the PartyIdentifier.
                          example: PERSONAL_ID
                        partyIdentifier:
                          title: PartyIdentifier
                          type: string
                          minLength: 1
                          maxLength: 128
                          description: Identifier of the Party.
                          example: 16135551212
                        partySubIdOrType:
                          title: PartySubIdOrType
                          type: string
                          minLength: 1
                          maxLength: 128
                          description: |
                            Either a sub-identifier of a PartyIdentifier, or a sub-type of the
                            PartyIdType, normally a PersonalIdentifierType.
                          example: DRIVING_LICENSE
                        fspId:
                          title: FspId
                          type: string
                          minLength: 1
                          maxLength: 32
                          description: FSP identifier.
                          example: 1234
                      required:
                        - partyIdType
                        - partyIdentifier
                    merchantClassificationCode:
                      title: MerchantClassificationCode
                      type: string
                      pattern: '^[\d]{1,4}$'
                      description: |
                        A limited set of pre-defined numbers. This list would be a limited set of
                        numbers identifying a set of popular merchant types like School Fees,
                        Pubs and Restaurants, Groceries, etc.
                      example: 4321
                    name:
                      title: PartyName
                      type: string
                      minLength: 1
                      maxLength: 128
                      description: Name of the Party. Could be a real name or a nickname.
                      example: Henrik Karlsson
                    personalInfo:
                      title: PartyPersonalInfo
                      type: object
                      description: Data model for the complex type PartyPersonalInfo.
                      properties:
                        complexName:
                          title: PartyComplexName
                          type: object
                          description: Data model for the complex type PartyComplexName.
                          properties:
                            firstName:
                              title: FirstName
                              type: string
                              minLength: 1
                              maxLength: 128
                              pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                              description: First name of the Party (Name Type).
                              example: Henrik
                            middleName:
                              title: MiddleName
                              type: string
                              minLength: 1
                              maxLength: 128
                              pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                              description: Middle name of the Party (Name Type).
                              example: Johannes
                            lastName:
                              title: LastName
                              type: string
                              minLength: 1
                              maxLength: 128
                              pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                              description: Last name of the Party (Name Type).
                              example: Karlsson
                        dateOfBirth:
                          title: DateofBirth (type Date)
                          type: string
                          pattern: '^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$'
                          description: Date of Birth of the Party.
                          example: '1966-06-16'
                    accounts:
                      description: 'List of accounts associated with the party containing and DFSP routable address, currency identifier and description.'
                      title: AccountList
                      type: object
                      properties:
                        account:
                          type: array
                          items:
                            title: Account
                            type: object
                            description: Data model for the complex type Account.
                            properties:
                              address:
                                title: AccountAddress
                                type: string
                                description: |
                                  A long-lived unique account identifier provided by the DFSP. This MUST NOT
                                  be Bank Account Number or anything that may expose a User's private bank
                                  account information.
                                pattern: '^([0-9A-Za-z_~\-\.]+[0-9A-Za-z_~\-])$'
                                minLength: 1
                                maxLength: 1023
                              currency:
                                $ref: '#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount/properties/currency'
                              description:
                                title: Name
                                type: string
                                pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                                description: |
                                  The API data type Name is a JSON String, restricted by a regular expression
                                  to avoid characters which are generally not used in a name.
                                  Regular Expression - The regular expression for restricting the
                                  Name type is \"^(?!\\s*$)[\\w .,'-]{1,128}$\". The restriction does not
                                  allow a string consisting of whitespace only, all Unicode characters are
                                  allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,)
                                  and space characters ( ).
                                  **Note:** In some programming languages,
                                  Unicode support must be specifically enabled. For example, if Java is used,
                                  the flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.
                            required:
                              - currency
                          minItems: 1
                          maxItems: 32
                          description: Accounts associated with the Party.
                      required:
                        - account
                  required:
                    - partyIdInfo
              required:
                - party
      responses:
        '200':
          $ref: '#/paths/~1authorizations~1%7BID%7D/put/responses/200'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
  '/parties/{Type}/{ID}/error':
    put:
      operationId: PartiesErrorByTypeAndID
      summary: Return error information
      description: |
        If the server is unable to find Party information of the provided
        identity, or another processing error occurred, the error callback PUT
        /parties///error (or PUT /parties////error) is used.
      tags:
        - parties
      parameters:
        - $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/parameters/0'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/0'
        - $ref: '#/paths/~1authorizations/post/parameters/1'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/1'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/2'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/3'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/4'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/5'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/6'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/7'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/8'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/9'
      requestBody:
        description: Error information returned.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1authorizations~1%7BID%7D~1error/put/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1authorizations~1%7BID%7D/put/responses/200'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
  '/parties/{Type}/{ID}/{SubId}':
    parameters:
      - $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/parameters/0'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/0'
      - name: SubId
        in: path
        required: true
        schema:
          type: string
        description: |
          A sub-identifier of the party identifier, or a sub-type of the party
          identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`.
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/1'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/2'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/3'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/4'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/5'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/6'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/7'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/8'
      - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/9'
    get:
      description: |
        The HTTP request GET /parties// (or GET /parties///) is used to lookup
        information regarding the requested Party, defined by ,  and optionally
        (for example, GET /parties/MSISDN/123456789, or GET
        /parties/BUSINESS/shoecompany/employee1).
      summary: GetPartiesByTypeIdAndSubId
      tags:
        - parties
      operationId: GetPartiesByTypeIdAndSubId
      responses:
        '202':
          $ref: '#/paths/~1authorizations/post/responses/202'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
    put:
      operationId: PartiesByTypeIdAndSubId
      summary: Return party information
      description: |
        The callback `PUT /parties/{Type}/{ID}/{SubId}` is used to inform the
        PISP of a successful result of the Party information lookup.

        Switch(Account Lookup Service) -> PISP.
      tags:
        - parties
      parameters:
        - $ref: '#/paths/~1authorizations/post/parameters/1'
      requestBody:
        description: Party information returned.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1authorizations~1%7BID%7D/put/responses/200'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
  '/parties/{Type}/{ID}/{SubId}/error':
    put:
      operationId: PartiesErrorByTypeIdAndSubId
      summary: Return error information
      description: |
        If the server is unable to find Party information of the provided
        identity, or another processing error occurred, the error callback PUT
        /parties///error (or PUT /parties////error) is used.
      tags:
        - parties
      parameters:
        - $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/parameters/0'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/0'
        - $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D~1%7BSubId%7D/parameters/2'
        - $ref: '#/paths/~1authorizations/post/parameters/1'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/1'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/2'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/3'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/4'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/5'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/6'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/7'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/8'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/9'
      requestBody:
        description: Error information returned.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1authorizations~1%7BID%7D~1error/put/requestBody/content/application~1json/schema'
      responses:
        '200':
          $ref: '#/paths/~1authorizations~1%7BID%7D/put/responses/200'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
  /authorizations:
    post:
      tags:
        - authorizations
      operationId: OutboundAuthorizationsPost
      summary: Outbound Authorizations endpoint
      description: DFSP Requests Authorization of Transaction from the End User
      parameters:
        - name: Accept
          in: header
          required: true
          schema:
            type: string
          description: |
            The `Accept` header field indicates the version of the API the client
            would like the server to use.
        - name: Content-Length
          in: header
          required: false
          schema:
            type: integer
          description: |
            The `Content-Length` header field indicates the anticipated size of the
            payload body. Only sent if there is a body.
            **Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/1'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/2'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/3'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/4'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/5'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/6'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/7'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/8'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/9'
      requestBody:
        description: Authorization request details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundAuthorizationsPostRequest'
            example:
              authenticationType: U2F
              retriesLeft: '1'
              amount:
                currency: USD
                amount: '124.45'
              transactionId: 2f169631-ef99-4cb1-96dc-91e8fc08f539
              transactionRequestId: 02e28448-3c05-4059-b5f7-d518d0a2d8ea
              quote:
                transferAmount:
                  currency: USD
                  amount: '124.45'
                payeeReceiveAmount:
                  currency: USD
                  amount: '123.45'
                payeeFspFee:
                  currency: USD
                  amount: '1.00'
                payeeFspCommission:
                  currency: USD
                  amount: '0'
                expiration: '2020-08-24T08:38:08.699-04:00'
                geoCode:
                  latitude: '+45.4215'
                  longitude: '+75.6972'
                ilpPacket: AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZ
                condition: f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA
                extensionList:
                  extension:
                    - key: errorDescription
                      value: This is a more detailed error description
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: ErrorInformationResponse
                type: object
                description: Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.
                properties:
                  errorInformation:
                    $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D~1error/put/requestBody/content/application~1json/schema/properties/errorInformation'
          headers:
            Content-Length:
              required: false
              schema:
                type: integer
              description: |
                The `Content-Length` header field indicates the anticipated
                size of the payload body. Only sent if there is a body.
                **Note:** The API supports a maximum size of 5242880 bytes
                (5 Megabytes).
            Content-Type:
              schema:
                type: string
              required: true
              description: The `Content-Type` header indicates the specific version of the API used to send the payload body.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/paths/~1authorizations/post/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Type'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/paths/~1authorizations/post/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Type'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1authorizations/post/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Type'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/paths/~1authorizations/post/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Type'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1authorizations/post/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Type'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/paths/~1authorizations/post/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Type'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1authorizations/post/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1authorizations/post/responses/400/headers/Content-Type'
  '/authorizations/{ID}':
    parameters:
      - name: ID
        in: path
        required: true
        schema:
          type: string
        description: The identifier value.
      - name: Content-Type
        in: header
        schema:
          type: string
        required: true
        description: |
          The `Content-Type` header indicates the specific version of the API used
          to send the payload body.
      - name: Date
        in: header
        schema:
          type: string
        required: true
        description: The `Date` header field indicates the date when the request was sent.
      - name: X-Forwarded-For
        in: header
        schema:
          type: string
        required: false
        description: |
          The `X-Forwarded-For` header field is an unofficially accepted standard used
          for informational purposes of the originating client IP address, as a
          request might pass multiple proxies, firewalls, and so on. Multiple
          `X-Forwarded-For` values should be expected and supported by implementers
          of the API.
          **Note:** An alternative to `X-Forwarded-For` is defined in
          [RFC 7239](https://tools.ietf.org/html/rfc7239).
          However, to this point RFC 7239 is less-used and supported than `X-Forwarded-For`.
      - name: FSPIOP-Source
        in: header
        schema:
          type: string
        required: true
        description: |
          The `FSPIOP-Source` header field is a non-HTTP standard field
          used by the API for identifying the sender of the HTTP request.
          The field should be set by the original sender of the request.
          Required for routing and signature verification
          (see header field `FSPIOP-Signature`).
      - name: FSPIOP-Destination
        in: header
        schema:
          type: string
        required: false
        description: |
          The `FSPIOP-Destination` header field is a non-HTTP standard field used by
          the API for HTTP header based routing of requests and responses to the
          destination. The field should be set by the original sender of the request
          (if known), so that any entities between the client and the server do not
          need to parse the payload for routing purposes.
      - name: FSPIOP-Encryption
        in: header
        schema:
          type: string
        required: false
        description: |
          The `FSPIOP-Encryption` header field is a non-HTTP standard field used by
          the API for applying end-to-end encryption of the request.
      - name: FSPIOP-Signature
        in: header
        schema:
          type: string
        required: false
        description: |
          The `FSPIOP-Signature` header field is a non-HTTP standard field used by the
          API for applying an end-to-end request signature.
      - name: FSPIOP-URI
        in: header
        schema:
          type: string
        required: false
        description: |
          The `FSPIOP-URI` header field is a non-HTTP standard field used by the API
          for signature verification, should contain the service URI. Required if
          signature verification is used, for more information, see
          [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).
      - name: FSPIOP-HTTP-Method
        in: header
        schema:
          type: string
        required: false
        description: |
          The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used by
          the API for signature verification, should contain the service HTTP method.
          Required if signature verification is used, for more information, see
          [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).
    get:
      tags:
        - authorizations
      operationId: GetAuthorizationsById
      summary: GetAuthorizationsById
      description: The HTTP request GET /authorizations/ is used to request the Payer to enter the applicable credentials in the Payee FSP system.
      responses:
        '202':
          $ref: '#/paths/~1authorizations/post/responses/202'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
    put:
      tags:
        - authorizations
      operationId: InboundAuthorizationsIDPutResponse
      summary: Inbound Authorizations endpoint
      description: |
        The callback PUT /authorizations/ is used to inform the client of the
        result of a previously-requested authorization. The ID in the URI should
        contain the one that was used in the POST /authorizations/ requestBody.transactionRequestId @ OUTBOUND
      parameters:
        - $ref: '#/paths/~1authorizations/post/parameters/1'
      requestBody:
        description: Authorization request details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundAuthorizationsIDPutResponse'
            example:
              authenticationInfo:
                authentication: U2F
                authenticationValue:
                  pinValue: '233133331'
                  counter: '1'
              responseType: ENTERED
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
  '/authorizations/{ID}/error':
    put:
      summary: AuthorizationsByIDAndError
      operationId: AuthorizationsByIDAndError
      description: 'If the server is unable to find the transaction request, or another processing error occurs, the error callback PUT /authorizations//error is used. The  in the URI should contain the  that was used in the GET /authorizations/.'
      tags:
        - authorizations
      parameters:
        - $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/parameters/0'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/0'
        - $ref: '#/paths/~1authorizations/post/parameters/1'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/1'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/2'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/3'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/4'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/5'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/6'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/7'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/8'
        - $ref: '#/paths/~1authorizations~1%7BID%7D/parameters/9'
      requestBody:
        description: Error information returned.
        required: true
        content:
          application/json:
            schema:
              title: ErrorInformationObject
              type: object
              description: Data model for the complex type object that contains ErrorInformation.
              properties:
                errorInformation:
                  title: ErrorInformation
                  type: object
                  description: Data model for the complex type ErrorInformation.
                  properties:
                    errorCode:
                      title: ErrorCode
                      type: string
                      pattern: '^[1-9]\d{3}$'
                      description: |
                        The API data type ErrorCode is a JSON String of four characters,
                        consisting of digits only. Negative numbers are not allowed.
                        A leading zero is not allowed. Each error code in the API is a
                        four-digit number, for example, 1234, where the first number
                        (1 in the example) represents the high-level error category,
                        the second number (2 in the example) represents the low-level error category,
                        and the last two numbers (34 in the example) represent the specific error.
                      example: 5100
                    errorDescription:
                      title: ErrorDescription
                      type: string
                      minLength: 1
                      maxLength: 128
                      description: Error description string.
                      example: This is an error description.
                    extensionList:
                      $ref: '#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/quote/properties/extensionList'
                  required:
                    - errorCode
                    - errorDescription
              required:
                - errorInformation
      responses:
        '200':
          $ref: '#/paths/~1authorizations~1%7BID%7D/put/responses/200'
        '400':
          $ref: '#/paths/~1authorizations/post/responses/400'
        '401':
          $ref: '#/paths/~1authorizations/post/responses/401'
        '403':
          $ref: '#/paths/~1authorizations/post/responses/403'
        '404':
          $ref: '#/paths/~1authorizations/post/responses/404'
        '405':
          $ref: '#/paths/~1authorizations/post/responses/405'
        '406':
          $ref: '#/paths/~1authorizations/post/responses/406'
        '501':
          $ref: '#/paths/~1authorizations/post/responses/501'
        '503':
          $ref: '#/paths/~1authorizations/post/responses/503'
components:
  schemas:
    Counter:
      allOf:
        - title: Integer
          type: string
          pattern: '^[1-9]\d*$'
          description: |
            The API data type Integer is a JSON String consisting of digits only.
            Negative numbers and leading zeroes are not allowed.
            The data type is always limited to a specific number of digits.
      description: Sequential counter used for cloning detection. Present only for U2F authentication.
    U2FPIN:
      title: U2FPIN
      type: string
      pattern: '^\S{1,64}$'
      minLength: 1
      maxLength: 64
      description: |
        U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.
    U2FPinValue:
      title: U2FPinValue
      type: object
      description: |
        U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.
      properties:
        pinValue:
          allOf:
            - $ref: '#/components/schemas/U2FPIN'
          description: U2F challenge-response.
        counter:
          allOf:
            - $ref: '#/components/schemas/Counter'
          description: Sequential counter used for cloning detection. Present only for U2F authentication.
    AuthenticationValue:
      title: AuthenticationValue
      oneOf:
        - title: OtpValue
          type: string
          pattern: '^\d{3,10}$'
          description: |
            The API data type OtpValue is a JSON String of 3 to 10 characters,
            consisting of digits only. Negative numbers are not allowed.
            One or more leading zeros are allowed.
        - title: QRCODE
          type: string
          minLength: 1
          maxLength: 64
          description: QR code used as a One Time Password.
        - $ref: '#/components/schemas/U2FPinValue'
      description: Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type.
    AuthenticationInfo:
      title: AuthenticationInfo
      type: object
      description: Data model for the complex type AuthenticationInfo.
      properties:
        authentication:
          title: AuthorizationChannelType
          type: string
          enum:
            - OTP
            - QRCODE
            - U2F
          description: |
            Below are the allowed values for the enumeration AuthorizationChannelType.
            - OTP - One-time password generated by the Payer FSP.
            - QRCODE - QR code used as One Time Password.
            - U2F - U2F is a new addition isolated to Thirdparty stream.

            This is based on FSPIOP `AuthenticationType` with U2F added.
          example: U2F
        authenticationValue:
          $ref: '#/components/schemas/AuthenticationValue'
      required:
        - authentication
        - authenticationValue
    InboundAuthorizationsIDPutResponse:
      description: information about result of required (via POST) /authorization
      title: AuthorizationsIDPutResponse
      type: object
      properties:
        authenticationInfo:
          $ref: '#/components/schemas/AuthenticationInfo'
        responseType:
          title: AuthorizationResponse
          type: string
          enum:
            - ENTERED
            - REJECTED
            - RESEND
          description: |
            Below are the allowed values for the enumeration.
            - ENTERED - Consumer entered the authentication value.
            - REJECTED - Consumer rejected the transaction.
            - RESEND - Consumer requested to resend the authentication value.
          example: ENTERED
      required:
        - responseType
    OutboundAuthorizationsPostRequest:
      title: authorizationsRequest
      description: POST /authorizations Request object
      type: object
      properties:
        authenticationType:
          $ref: '#/components/schemas/AuthenticationInfo/properties/authentication'
        retriesLeft:
          $ref: '#/components/schemas/Counter/allOf/0'
        amount:
          title: Money
          type: object
          description: Data model for the complex type Money.
          properties:
            currency:
              title: Currency
              description: |
                The currency codes defined in
                [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)
                as three-letter alphabetic codes are used as the standard naming representation for currencies.
              type: string
              minLength: 3
              maxLength: 3
              enum:
                - AED
                - AFN
                - ALL
                - AMD
                - ANG
                - AOA
                - ARS
                - AUD
                - AWG
                - AZN
                - BAM
                - BBD
                - BDT
                - BGN
                - BHD
                - BIF
                - BMD
                - BND
                - BOB
                - BRL
                - BSD
                - BTN
                - BWP
                - BYN
                - BZD
                - CAD
                - CDF
                - CHF
                - CLP
                - CNY
                - COP
                - CRC
                - CUC
                - CUP
                - CVE
                - CZK
                - DJF
                - DKK
                - DOP
                - DZD
                - EGP
                - ERN
                - ETB
                - EUR
                - FJD
                - FKP
                - GBP
                - GEL
                - GGP
                - GHS
                - GIP
                - GMD
                - GNF
                - GTQ
                - GYD
                - HKD
                - HNL
                - HRK
                - HTG
                - HUF
                - IDR
                - ILS
                - IMP
                - INR
                - IQD
                - IRR
                - ISK
                - JEP
                - JMD
                - JOD
                - JPY
                - KES
                - KGS
                - KHR
                - KMF
                - KPW
                - KRW
                - KWD
                - KYD
                - KZT
                - LAK
                - LBP
                - LKR
                - LRD
                - LSL
                - LYD
                - MAD
                - MDL
                - MGA
                - MKD
                - MMK
                - MNT
                - MOP
                - MRO
                - MUR
                - MVR
                - MWK
                - MXN
                - MYR
                - MZN
                - NAD
                - NGN
                - NIO
                - NOK
                - NPR
                - NZD
                - OMR
                - PAB
                - PEN
                - PGK
                - PHP
                - PKR
                - PLN
                - PYG
                - QAR
                - RON
                - RSD
                - RUB
                - RWF
                - SAR
                - SBD
                - SCR
                - SDG
                - SEK
                - SGD
                - SHP
                - SLL
                - SOS
                - SPL
                - SRD
                - STD
                - SVC
                - SYP
                - SZL
                - THB
                - TJS
                - TMT
                - TND
                - TOP
                - TRY
                - TTD
                - TVD
                - TWD
                - TZS
                - UAH
                - UGX
                - USD
                - UYU
                - UZS
                - VEF
                - VND
                - VUV
                - WST
                - XAF
                - XCD
                - XDR
                - XOF
                - XPF
                - YER
                - ZAR
                - ZMW
                - ZWD
              example: USD
            amount:
              title: Amount
              type: string
              pattern: '^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$'
              description: |
                The API data type Amount is a JSON String in a canonical format that is
                restricted by a regular expression for interoperability reasons.
                This pattern does not allow any trailing zeroes at all, but allows an amount
                without a minor currency unit. It also only allows four digits in the minor
                currency unit; a negative value is not allowed. Using more than 18 digits
                in the major currency unit is not allowed.
              example: 123.45
          required:
            - currency
            - amount
        transactionId:
          title: CorrelationId
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
          description: |
            Identifier that correlates all messages of the same sequence.
            The API data type UUID (Universally Unique Identifier) is a JSON String
            in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122),
            that is restricted by a regular expression for interoperability reasons.
            A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).
          example: b51ec534-ee48-4575-b6a9-ead2955b8069
        transactionRequestId:
          $ref: '#/components/schemas/OutboundAuthorizationsPostRequest/properties/transactionId'
        quote:
          title: QuotesIDPutResponse
          type: object
          description: 'The object sent in the PUT /quotes/{ID} callback.'
          properties:
            transferAmount:
              $ref: '#/components/schemas/OutboundAuthorizationsPostRequest/properties/amount'
            payeeReceiveAmount:
              $ref: '#/components/schemas/OutboundAuthorizationsPostRequest/properties/amount'
            payeeFspFee:
              $ref: '#/components/schemas/OutboundAuthorizationsPostRequest/properties/amount'
            payeeFspCommission:
              $ref: '#/components/schemas/OutboundAuthorizationsPostRequest/properties/amount'
            expiration:
              title: DateTime
              type: string
              pattern: '^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$'
              description: |
                The API data type DateTime is a JSON String in a lexical format that is
                restricted by a regular expression for interoperability reasons.
                The format is according to
                [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html),
                expressed in a combined date, time and time zone format.
                A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM].
                Examples are \"2016-05-24T08:38:08.699-04:00\", \"2016-05-24T08:38:08.699Z\"
                (where Z indicates Zulu time zone, same as UTC).
              example: '2016-05-24T08:38:08.699-04:00'
            geoCode:
              title: GeoCode
              type: object
              description: |
                Data model for the complex type GeoCode.
                Indicates the geographic location from where the transaction was initiated.
              properties:
                latitude:
                  title: Latitude
                  type: string
                  pattern: '^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,6})?))$'
                  description: |
                    The API data type Latitude is a JSON String in a lexical format that is
                    restricted by a regular expression for interoperability reasons.
                  example: '+45.4215'
                longitude:
                  title: Longitude
                  type: string
                  pattern: '^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,6})?))$'
                  description: |
                    The API data type Longitude is a JSON String in a lexical format that
                    is restricted by a regular expression for interoperability reasons.
                  example: '+75.6972'
              required:
                - latitude
                - longitude
            ilpPacket:
              title: IlpPacket
              type: string
              pattern: '^[A-Za-z0-9-_]+[=]{0,2}$'
              minLength: 1
              maxLength: 32768
              description: Information for recipient (transport layer information).
              example: AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA
            condition:
              title: IlpCondition
              type: string
              pattern: '^[A-Za-z0-9-_]{43}$'
              maxLength: 48
              description: Condition that must be attached to the transfer by the Payer.
              example: f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA
            extensionList:
              title: ExtensionList
              type: object
              description: |
                Data model for the complex type ExtensionList.
                An optional list of extensions, specific to deployment.
              properties:
                extension:
                  type: array
                  items:
                    title: Extension
                    type: object
                    description: Data model for the complex type Extension.
                    properties:
                      key:
                        title: ExtensionKey
                        type: string
                        minLength: 1
                        maxLength: 32
                        description: Extension key.
                      value:
                        title: ExtensionValue
                        type: string
                        minLength: 1
                        maxLength: 128
                        description: Extension value.
                    required:
                      - key
                      - value
                  minItems: 1
                  maxItems: 16
                  description: Number of Extension elements.
              required:
                - extension
          required:
            - transferAmount
            - expiration
            - ilpPacket
            - condition
      required:
        - authenticationType
        - retriesLeft
        - amount
        - transactionId
        - transactionRequestId
        - quote
