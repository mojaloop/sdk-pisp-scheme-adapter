[
  {
    "ruleId": 1,
    "priority": 1,
    "description": "put /authorizations/{ID}",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 0,
      "type": "thirdparty_pisp",
      "asynchronous": true
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/authorizations/{ID}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "put"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "scripts": {
          "exec": [
            "const userConfig = JSON.parse(pm.globals.get('userConfig'))",
            "const curDate = (new Date()).toUTCString()",
            "const thirdpartyRequest = {",
            "url: userConfig.CALLBACK_ENDPOINT + '/thirdpartyRequests/transactions/b51ec534-ee48-4575-b6a9-ead2955b8069',",
            "method: 'patch',",
            "header: {",
            "  'FSPIOP-Source': 'switch',",
            "  'Accept': 'application/vnd.interoperability.thirdparty+json;version=1.0',",
            "  'Content-Type': 'application/vnd.interoperability.thirdparty+json;version=1.0',",
            "  'Date': curDate",
            "},",
            "body: {",
            "  mode: 'raw',",
            "  raw: JSON.stringify({",
            "    \"transactionId\": \"b51ec534-ee48-4575-b6a9-ead2955b8069\",",
            "    \"transactionRequestState\": \"ACCEPTED\"",
            "  })",
            "}",
            "}",
            "pm.sendRequest(thirdpartyRequest, function (err, response) {",
            "console.log('transactions response : '+JSON.stringify(response.json()))",
            "});"
          ]
        }
      },
      "type": "MOCK_RESPONSE"
    },
    "type": "response",
    "version": 1
  }
]