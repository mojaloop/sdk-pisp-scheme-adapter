@startuml

title PISP Linking

participant "PISP Backend" as PISP
box "PISP tp-scheme-adapter"
  participant "outbound-server" as PISP_TP_OUT
  participant "PISPLinkingModel" as PISP_LM
  participant "inbound-server" as PISP_TP_IN
end box
box "Mojaloop"
    participant Switch
end box
box "DFSP tp-scheme-adapter"
  participant "inbound-server" as DFSP_TP_IN
  participant "DFSPLinkingModel" as DFSP_LM
end box
participant DFSPAuthorizeSimulator

== Request Consent - Web ==
autonumber 1 "<b>REQUEST-CONSENT-#</b>"
rnote right of PISP
PISP presents accounts to user. User selects one or more accounts to link.
end note
PISP -> PISP_TP_OUT: POST /linking/request-consent
rnote right of PISP #LightBlue
POST /linking/request-consent
{
  "accounts": [
    { accountNickname: "XXXXXXnt", id: "dfspa.username.1234", currency: "ZAR" },
    { accountNickname: "SpeXXXXXXXXnt", id: "dfspa.username.5678", currency: "USD" }
  ],
  callbackURI: 'pisp-app://callback'
}
end note


activate PISP
activate PISP_TP_OUT

PISP_TP_OUT -> PISP_TP_OUT: const model = await create()
rnote right of PISP_TP_OUT: state: start
PISP_TP_OUT -> PISP_LM: model.requestConsent()

activate PISP_LM

PISP_LM -> PISP_LM: ThirdpartyRequests.postConsentRequests()
PISP_LM -> Switch: POST /consentRequests
rnote right of PISP_LM #LightBlue
POST /consentRequests
FSIOP-Source: pispa
FSIOP-Destination: dfspa
{
  // consentRequestId will be the uuid created
  // at the PRELINKING-2
  consentRequestId: 6789
  scopes: [{
    accountId: 'dfspa.username.1234',
    actions: ['accounts.getBalance', 'accounts.transfer'],
    accountId: 'dfspa.username.5678',
    actions: ['accounts.getBalance', 'accounts.transfer'],
  }],
  // model will add `authChannels`
  authChannels: ["WEB", "OTP"],
  callbackURI: 'pisp-app://callback...'
}
end note

activate Switch
Switch --> PISP_LM: 202 Accepted
deactivate PISP_LM
Switch -> DFSP_TP_IN: POST /consentRequests
activate DFSP_TP_IN

DFSP_TP_IN -> DFSP_TP_IN: const model = await create()
activate DFSP_LM
DFSP_TP_IN -> DFSP_LM: model.requestConsent()
DFSP_TP_IN --> Switch: 202 Accepted
deactivate Switch
deactivate DFSP_TP_IN
DFSP_LM -> DFSP_LM: DFSPBackendRequests.validateConsentRequest()
activate DFSPAuthorizeSimulator
DFSP_LM -> DFSPAuthorizeSimulator: ""POST /store/consentRequests/6789""
DFSPAuthorizeSimulator -> DFSPAuthorizeSimulator: store consentRequest details
DFSPAuthorizeSimulator -> DFSP_LM: 201 Created
deactivate DFSPAuthorizeSimulator

activate Switch
DFSP_LM -> Switch: PUT /consentRequests/6789

rnote left of DFSP_LM #LightBlue
PUT /consentRequests/6789
FSIOP-Source: pispa
FSIOP-Destination: dfspa
{
  consentRequestId: 6789
  scopes: [{
    accountId: 'dfspa.username.1234',
    actions: ['accounts.getBalance', 'accounts.transfer'],
    accountId: 'dfspa.username.5678',
    actions: ['accounts.getBalance', 'accounts.transfer'],
  }],
  authChannels: ["WEB"],
  callbackURI: 'pisp-app://callback...',
  authURI: 'dfspa.com/authorize?consentRequestId=6789' // this is new
}
end note
Switch --> DFSP_LM: 202 ACCEPTED
deactivate DFSP_LM
activate PISP_TP_IN
Switch ->  PISP_TP_IN: PUT /consentRequests/6789
PISP_TP_IN --> Switch: 200 OK
deactivate Switch
activate PISP_LM
PISP_TP_IN --> PISP_LM: Consent Request response recieved
rnote right of PISP_LM: state: webAuthenticationChannelResponseRecieved
deactivate PISP_TP_IN
PISP_LM -> PISP_TP_OUT: return Authentication Response
deactivate PISP_LM
PISP_TP_OUT --> PISP: 200 OK Autentication Response

note over PISP, DFSP_LM
  ERROR_SCENARIO:
    FSP does not find scopes suitable |
    FSP does not support any requested authentication channels |
    FSP does not support any requested scope actions |
    FSP does not trust PISP callback URI
end note

activate DFSP_TP_IN
DFSP_TP_IN -> DFSP_TP_IN: const model = await create()
activate DFSP_LM
DFSP_TP_IN -> DFSP_LM: model.requestConsent()
activate Switch
DFSP_TP_IN --> Switch: 202 Accepted
DFSP_LM -> DFSP_LM: DFSPBackendRequests.validateConsentRequest()

deactivate DFSP_TP_IN
DFSP_LM -> Switch: PUT /consentRequests/6789/error

rnote left of DFSP_LM #LightCoral
PUT /consentRequests/6789/error
FSIOP-Source: dfspa
FSIOP-Destination: pispa
{
  errorInformation: {
    errorCode: '720x',
    errorDescription: 'FSP does not find scopes suitable'
  } OR
  errorInformation: {
    errorCode: '7203',
    errorDescription: 'FSP does not support any requested authentication channels'
  } OR
  errorInformation: {
    errorCode: '7204',
    errorDescription: 'FSP does not support any requested scope actions'
  } OR
  errorInformation: {
    errorCode: '720x',
    errorDescription: 'FSP does not trust PISP callback URI'
  }
}
end note
Switch --> DFSP_LM: 200 OK
deactivate DFSP_LM
activate PISP_TP_IN
deactivate DFSP_LM
Switch ->  PISP_TP_IN: PUT /consentRequests/6789/error
PISP_TP_IN --> Switch: 200 OK
deactivate Switch
activate PISP_LM
PISP_TP_IN --> PISP_LM: MojaloopFSPIOPError response recieved
rnote right of PISP_LM: state: errored
deactivate PISP_TP_IN
PISP_LM -> PISP_TP_OUT: return MojaloopFSPIOPError
deactivate PISP_LM
PISP_TP_OUT --> PISP: 500 Internal Server Error ErrorInformationObject
deactivate PISP_TP_OUT
deactivate PISP

== Request Consent - OTP ==
autonumber 1 "<b>REQUEST-CONSENT-#</b>"
rnote right of PISP
PISP presents accounts to user. User selects one or more accounts to link.
end note
PISP -> PISP_TP_OUT: POST /linking/request-consent
rnote right of PISP #LightBlue
POST /linking/request-consent
{
  "accounts": [
    { accountNickname: "XXXXXXnt", id: "dfspa.username.1234", currency: "ZAR" },
    { accountNickname: "SpeXXXXXXXXnt", id: "dfspa.username.5678", currency: "USD" }
  ],
  callbackURI: 'pisp-app://callback'
}
end note

activate PISP
activate PISP_TP_OUT

PISP_TP_OUT -> PISP_TP_OUT: const model = await create()
rnote right of PISP_TP_OUT: state: start
PISP_TP_OUT -> PISP_LM: model.requestConsent()

activate PISP_LM

PISP_LM -> PISP_LM: ThirdpartyRequests.postConsentRequests()
PISP_LM -> Switch: POST /consentRequests
rnote right of PISP_LM #LightBlue
POST /consentRequests
FSIOP-Source: pispa
FSIOP-Destination: dfspa
{
  // consentRequestId will be the uuid created
  // at the PRELINKING-2
  consentRequestId: 6789
  scopes: [{
    accountId: 'dfspa.username.1234',
    actions: ['accounts.getBalance', 'accounts.transfer'],
    accountId: 'dfspa.username.5678',
    actions: ['accounts.getBalance', 'accounts.transfer'],
  }],
  // model will add `authChannels`
  authChannels: ["OTP"],
  callbackURI: 'pisp-app://callback...'
}
end note

activate Switch
Switch --> PISP_LM: 202 Accepted
deactivate PISP_LM
Switch -> DFSP_TP_IN: POST /consentRequests
activate DFSP_TP_IN

DFSP_TP_IN -> DFSP_TP_IN: const model = await create()
activate DFSP_LM
DFSP_TP_IN -> DFSP_LM: model.requestConsent()
DFSP_TP_IN --> Switch: 202 Accepted
deactivate Switch
deactivate DFSP_TP_IN
DFSP_LM -> DFSP_LM: DFSPBackendRequests.validateConsentRequest()
activate DFSPAuthorizeSimulator
DFSP_LM -> DFSPAuthorizeSimulator: ""POST /store/consentRequests/6789""
DFSPAuthorizeSimulator -> DFSPAuthorizeSimulator: store consentRequest details
DFSPAuthorizeSimulator -> DFSP_LM: 201 Created
deactivate DFSPAuthorizeSimulator

DFSP_TP_IN --> Switch: 202 Accepted
deactivate DFSP_TP_IN


activate Switch
DFSP_LM -> Switch: PUT /consentRequests/6789

rnote left of DFSP_LM #LightBlue
PUT /consentRequests/6789
FSIOP-Source: pispa
FSIOP-Destination: dfspa
{
  consentRequestId: 6789
  scopes: [{
    accountId: 'dfspa.username.1234',
    actions: ['accounts.getBalance', 'accounts.transfer'],
    accountId: 'dfspa.username.5678',
    actions: ['accounts.getBalance', 'accounts.transfer'],
  }],
  authChannels: ["OTP"],
  callbackURI: 'pisp-app://callback...',
  authURI: 'dfspa.com/authorize?consentRequestId=6789' // this is new
}
end note
Switch --> DFSP_LM: 202 ACCEPTED
deactivate DFSP_LM
activate PISP_TP_IN
Switch ->  PISP_TP_IN: PUT /consentRequests/6789
PISP_TP_IN --> Switch: 200 OK
deactivate Switch
activate PISP_LM
PISP_TP_IN --> PISP_LM: Consent Request response recieved
rnote right of PISP_LM: state: OTPAuthenticationChannelResponseRecieved
deactivate PISP_TP_IN
PISP_LM -> PISP_TP_OUT: return Authentication Response
deactivate PISP_LM
PISP_TP_OUT --> PISP: 200 OK Autentication Response

note over PISP, DFSP_LM
  ERROR_SCENARIO:
    FSP does not find scopes suitable |
    FSP does not support any requested authentication channels |
    FSP does not support any requested scope actions |
    FSP does not trust PISP callback URI
end note

activate DFSP_TP_IN
DFSP_TP_IN -> DFSP_TP_IN: const model = await create()
activate DFSP_LM
DFSP_TP_IN -> DFSP_LM: model.requestConsent()
activate Switch
DFSP_TP_IN --> Switch: 202 Accepted
DFSP_LM -> DFSP_LM: DFSPBackendRequests.validateConsentRequest()

deactivate DFSP_TP_IN


DFSP_LM -> Switch: PUT /consentRequests/6789/error

rnote left of DFSP_LM #LightCoral
PUT /consentRequests/6789/error
FSIOP-Source: dfspa
FSIOP-Destination: pispa
{
  errorInformation: {
    errorCode: '720x',
    errorDescription: 'FSP does not find scopes suitable'
  } OR
  errorInformation: {
    errorCode: '7203',
    errorDescription: 'FSP does not support any requested authentication channels'
  } OR
  errorInformation: {
    errorCode: '7204',
    errorDescription: 'FSP does not support any requested scope actions'
  } OR
  errorInformation: {
    errorCode: '720x',
    errorDescription: 'FSP does not trust PISP callback URI'
  }
}
end note
Switch --> DFSP_LM: 200 OK
deactivate DFSP_LM
activate PISP_TP_IN
deactivate DFSP_LM
Switch ->  PISP_TP_IN: PUT /consentRequests/6789/error
PISP_TP_IN --> Switch: 200 OK
deactivate Switch
activate PISP_LM
PISP_TP_IN --> PISP_LM: MojaloopFSPIOPError response recieved
rnote right of PISP_LM: state: errored
deactivate PISP_TP_IN
PISP_LM -> PISP_TP_OUT: return MojaloopFSPIOPError
deactivate PISP_LM
PISP_TP_OUT --> PISP: 500 Internal Server Error ErrorInformationObject
deactivate PISP_TP_OUT
deactivate PISP

@enduml
